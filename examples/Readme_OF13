#######################################################################
                    SETTING UP THE ENVIRONEMENT
#######################################################################




#######################################################################
                          TESTING EXAMPLES
#######################################################################

          **************  STATIC EXAMPLES *******************

----- I-   toyExample

          # launch the hypervisor
                ~/airnet $ ./launch_airnet_ryu.sh toyExample.toyExample toyExample.toyExample_mapping
          # launch the controller
                ~/airnet/controllers/ryu $ ryu-manager --observe-links airnet_interface.py
          # launch mininet
                ~/topo$ sudo python topo_toyExample.py 192.168.56.1 6633

          # tests
                mininet> host_A ping -c1 host_B --> OK



----- II-  toyExample_bis

          # launch the hypervisor
                ~/airnet $ ./launch_airnet_ryu.sh toyExample.toyExample_bis toyExample.toyExample_mapping
          # launch the controller
                ~/airnet/controllers/ryu $ ryu-manager --observe-links airnet_interface.py
          # launch mininet
                ~/topo$ sudo python topo_toyExample.py 192.168.56.1 6633

          # tests
                mininet> host_A ping -c1 host_B --> OK
                mininet> host_A wget host_B --> OK (should be NOT OK -- bug !! fix priorities between match and drop)






          ************  DYNAMIC EXAMPLES *****************




          ************    STATISTICS     *****************

----- I-   toyExampleStat

         # launch the hypervisor
               ~/airnet $ ./launch_airnet_ryu.sh toyExampleStat.toyExampleStat toyExampleStat.toyExampleStat_mapping
         # launch the controller
              ~/airnet/controllers/ryu $ ryu-manager --observe-links airnet_interface.py
         # launch mininet
              ~/topo$ sudo python topo_toyExample.py 192.168.56.1 6633

         # tests
              statistics data are collected every 10 seconds in statsLogs.txt

              mininet> host_A ping -c7 host_B --> OK
              -> once pings counter reaches 6, the dynamic fonction (savestat()) returns a policy


----- II-  toyExampleDataCap

             ~/airnet $ ./launch_airnet_ryu.sh toyExampleDataCap.toyExampleDataCap toyExampleDataCap.toyExampleDataCap_mapping

             ~/airnet/controllers/ryu $ ryu-manager --observe-links airnet_interface.py

             ~/topo$ sudo python topo_toyExample.py 192.168.56.1 6633

        # tests
             statictics data are collected every 20 seconds
             if a host downloads more than 1000 bytes in 20s, its communications are blocked for 20s

             mininet> host_B ping -c1 -s 1024 host_A --> OK
             wait for reject policy to apply(max 19s)

             mininet> host_B ping -c1 host_A --> NOT OK (host_A coms are blocked)

             wait for accept policy to apply(~= 20s)
             mininet> host_B ping -c1 host_A --> OK (host_A can again use the network)


----- III- checkDataCap

            ~/airnet $ ./launch_airnet_ryu.sh checkDataCap.checkDataCap checkDataCap.checkDataCap_mapping

            ~/airnet/controllers/ryu $ ryu-manager --observe-links airnet_interface.py

            ~/topo$ sudo python topo_toyExample.py 192.168.56.1 6633

                     # tests
                          statictics data are collected every 60 seconds
                          if a host downloads more than 1000 bytes in 60s, its communications are blocked for 60s

                          mininet> h3 ping -c1 -s 1024 h1 --> OK
                          wait for reject policy to apply(max 59s)

                          mininet> h3 ping -c1 h2 --> OK
                          mininet> h3 ping -c1 h1 --> NOT OK (h1 coms are blocked)

                          wait for accept policy to apply(~= 60s)
                          mininet> h3 ping -c1 h1 --> OK (h1 can again use the network)
