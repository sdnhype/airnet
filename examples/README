            ************************
            *** AirNet use cases ***
            ************************

******************************************************************************
******************************************************************************

=======================
== Static filtering  ==
=======================

# examples/staticFiltering/

This is an example involving different types of policies filtering traffic
based on the destination, network protocol, transport protocol or port number.

Virtual topology: 4 edges (one-to-one mapping), 1 fabric

======================
== Static 2 fabrics ==
======================

# examples/staticTwoFabrics/

This is an example of AirNet program that uses two fabrics.

Virtual topology: 3 edges (one-to-two and one-to-one mapping), 2 fabrics

=======================================
== Static catch parallel composition ==
=======================================

# examples/staticParallelCatch/

Testing 2 catch() instructions in parallel, same destination in the carry().
Ex.: ( catch() + catch() ) >> carry()

Virtual topology: 3 edges (one-to-two and one-to-one mapping), 2 fabrics

===========================================
== Static edge gateway between 2 fabrics ==
===========================================

# examples/staticEdgeGateway/

One edge between two fabrics. Traffic forwarded through that edge.

Virtual topology: 3 edges (one-to-one mapping), 2 fabrics

============================
== Dynamic authentication ==
============================

# examples/dynAuthentication/

Example with an "authenticate" dynamic network control function. This function
authenticates the flow based on the IP source address of the first packet.

Virtual topology: 3 edges (one-to-one and one-to-two mapping), 1 fabric

******************************************************************************
******************************************************************************

============================
== Dynamic Load Balancer  ==
============================

##### TODO : first packet is not reinjected into the data plane

# examples/dynLB/

-- RYU

$ cd controllers/ryu/
$ ryu-manager --observe-links airnet_interface.py

-- AirNet

$ ./launch_airnet_ryu.sh dynLB.dynLoadBalancer dynLB.dynLoadBalancer_mapping

-- Mininet

$ sudo python dynLoadBalancer_topo.py 192.168.56.1 6633

-- Tests

#PUBLIC IP == 10.0.0.50

mininet> client1 ping -c5 10.0.0.50  ---> OK (5 packets transmitted, 4 received, 20% packet loss)
mininet> client1 ping -c5 10.0.0.50  ---> OK (5 packets transmitted, 5 received, 0% packet loss)


mininet> client2 ping -c5 10.0.0.50  ---> OK (5 packets transmitted, 4 received, 20% packet loss)
mininet> client3 ping -c5 10.0.0.50  ---> OK (5 packets transmitted, 4 received, 20% packet loss)
mininet> client4 ping -c5 10.0.0.50  ---> OK (5 packets transmitted, 4 received, 20% packet loss)

******************************************************************************
******************************************************************************

=======================================
== Statistics on Three Edges ==
=======================================

# examples/statThreeEdges/

-- RYU

$ cd controllers/ryu/
$ ryu-manager --observe-links airnet_interface.py

-- AirNet

$ ./launch_airnet_ryu.sh statThreeEdges.statThreeEdges statThreeEdges.statThreeEdges_mapping

-- Mininet

$ sudo python statThreeEdges_topo.py 192.168.56.1 6633

-- Tests

mininet> pingall --> OK
